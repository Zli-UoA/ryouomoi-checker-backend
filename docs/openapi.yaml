openapi: 3.0.0
info:
  title: RyouomoiChecker
  version: '1.0'
  description: ''
servers:
  - url: 'https://ryouomoichecker.yt8492.com/api'
    description: prod
  - url: 'http://localhost:8080'
    description: test
paths:
  /friends/search:
    get:
      summary: Search Twitter user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TwitterUser'
              examples:
                example-1:
                  value:
                    - id: 0
                      screenNme: yt8492
                      displayName: マヤミト
                      imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                      biography: オタクです
      operationId: get-friends-search
      security:
        - dummy_token: []
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: ユーザー検索で使う文字列
      description: Twitterのユーザーを検索する
  /friends/followee:
    get:
      summary: Get Twitter followee
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TwitterUser'
              examples:
                example-1:
                  value:
                    - id: 0
                      screenNme: yt8492
                      displayName: マヤミト
                      imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                      biography: オタクです
      operationId: get-friends-follow
      security:
        - dummy_token: []
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: ユーザー検索で使う文字列
      description: Twitterでフォローしている人を取得する
    parameters: []
  /friends/follower:
    get:
      summary: Get Twitter followee
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/TwitterUser'
              examples:
                example-1:
                  value:
                    - id: 0
                      screenNme: yt8492
                      displayName: マヤミト
                      imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                      biography: オタクです
      operationId: get-friends-follower
      security:
        - dummy_token: []
      parameters:
        - schema:
            type: string
          in: query
          name: query
          description: ユーザー検索で使う文字列
      description: Twitterのフォローされている人を取得する
    parameters: []
  '/friends/{id}':
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
    post:
      summary: Set love point
      operationId: post-friends-id
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  matchSuccess:
                    type: boolean
                  lover:
                    $ref: '#/components/schemas/Lover'
              examples:
                example-1:
                  value:
                    matchSuccess: false
                example-2:
                  value:
                    matchSuccess: true
                    lover:
                      user:
                        id: 0
                        screenNme: yt8492
                        displayName: マヤミト
                        imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                        biography: オタクです
                      talkRoomUrl: 'https://twitter.com/messages/compose?recipient_id=972404402425245697'
        '425':
          description: Too Early
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  remainDays:
                    type: string
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/LovePoint'
            examples:
              example-1:
                value:
                  lovePoint: 3
      security:
        - dummy_token: []
  /me:
    get:
      summary: GET logged in user
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/TwitterUser'
              examples:
                example-1:
                  value:
                    id: 0
                    screenNme: yt8492
                    displayName: マヤミト
                    imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                    biography: オタクです
      operationId: get-me
      description: ログインしているユーザーの情報の取得
      security:
        - dummy_token: []
  /me/lover:
    get:
      summary: GET current lover
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Lover'
              examples:
                example-1:
                  value:
                    user:
                      id: 0
                      screenNme: yt8492
                      displayName: マヤミト
                      imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                      biography: オタクです
                    talkRoomUrl: 'https://twitter.com/messages/compose?recipient_id=972404402425245697'
        '404':
          description: Not Found
        '425':
          description: Too Early
          content:
            application/json:
              schema:
                type: object
                properties:
                  message:
                    type: string
                  remainDays:
                    type: integer
              examples:
                example-1:
                  value:
                    message: string
                    remainDays: 0
      operationId: get-me-lover
      security:
        - dummy_token: []
    delete:
      summary: Delete Current Lover
      operationId: delete-me-lover
      responses:
        '200':
          description: OK
      description: 破局手続きをする
      security:
        - dummy_token: []
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                reasonId:
                  type: integer
                  description: '1: 価値観の違い, 2: 趣味・嗜好の違い, 3: 冷めた・嫌いになった, 4: 他に好きな人ができた, 5: 自然消滅, 6: その他'
                allowShare:
                  type: boolean
            examples:
              example-1:
                value:
                  reasonId: 1
                  allowShare: true
        description: Broke Reason
  /me/lovers:
    get:
      summary: Get UserLovePoint List
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/UserLovePoint'
              examples:
                example-1:
                  value:
                    - user:
                        id: 0
                        screenNme: yt8492
                        displayName: マヤミト
                        imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
                        biography: オタクです
                      lovePoint: 3
      operationId: get-me-lovers
      description: 現在設定している好き度一覧を取得する
      security:
        - dummy_token: []
  '/me/lovers/{id}':
    get:
      summary: Get UserLovePoint
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/LovePoint'
              examples:
                example-1:
                  value:
                    lovePoint: 3
      operationId: get-me-lovers
      description: 特定のユーザーに対して現在設定している好き度を取得する
      security:
        - dummy_token: []
    parameters:
      - schema:
          type: string
        name: id
        in: path
        required: true
        description: lover user id
    delete:
      summary: Delete User Love Point
      operationId: delete-me-lovers-id
      responses:
        '200':
          description: OK
        '404':
          description: Not Found
      description: 好き度の削除
      parameters: []
      security:
        - dummy_token: []
  /twitter/login:
    get:
      summary: GET Twitter OAuth URL
      tags: []
      responses:
        '200':
          description: OK
          content:
            application/json:
              schema:
                type: object
                properties:
                  loginUrl:
                    type: string
              examples:
                example-1:
                  value:
                    loginUrl: string
      operationId: get-twitter-login
      description: Get Twitter login url
    parameters: []
  /twitter/callback:
    post:
      summary: Post OAuth token and verifier
      operationId: post-twitter-callback
      responses:
        '302':
          description: Found
          headers:
            Location:
              schema:
                type: string
              description: リダイレクトする先のフロントのURL
      description: Post Twitter oauth_token and oauth_verifier
      requestBody:
        content:
          application/json:
            schema:
              type: object
              properties:
                oauth_token:
                  type: string
                oauth_verifier:
                  type: string
            examples:
              example-1:
                value:
                  oauth_token: string
                  oauth_verifier: string
components:
  schemas:
    TwitterUser:
      title: TwitterUser
      type: object
      properties:
        id:
          type: integer
        screenNme:
          type: string
        displayName:
          type: string
        profileImageUrl:
          type: string
        biography:
          type: string
      examples:
        - id: 0
          screenNme: yt8492
          displayName: マヤミト
          imageUrl: 'https://pbs.twimg.com/profile_images/1377462231000997889/3JIrjbd6_normal.jpg'
          biography: オタクです
      description: ''
    UserLovePoint:
      title: UserLovePoint
      type: object
      properties:
        user:
          $ref: '#/components/schemas/TwitterUser'
        lovePoint:
          type: integer
      x-examples: {}
    LovePoint:
      title: LovePoint
      type: object
      properties:
        lovePoint:
          type: integer
      description: ''
    Lover:
      title: Lover
      type: object
      properties:
        user:
          $ref: '#/components/schemas/TwitterUser'
        talkRoomUrl:
          type: string
  securitySchemes:
    dummy_token:
      type: http
      scheme: bearer
